---
- name: Install K3s, Docker, Helm, and Airflow
  hosts: all
  become: true
  vars:
    airflow_git_repo: "git@github.com:im-noob/k8s-airflow.git"
    kubeconfig_path: "~/.kube/config"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        update_cache: yes
        upgrade: dist
        force_apt_get: yes

    - name: Install required packages
      apt:
        name:
          - curl
          - wget
          - apt-transport-https
          - git
          - ca-certificates
        state: present

    - name: Add Docker GPG key
      ansible.builtin.command:
        cmd: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc"
      args:
        creates: /etc/apt/keyrings/docker.asc

    - name: Set permissions for Docker GPG key
      file:
        path: /etc/apt/keyrings/docker.asc
        mode: "0644"

    - name: Add Docker repository
      ansible.builtin.shell:
        cmd: |
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo $VERSION_CODENAME) stable" | \
          tee /etc/apt/sources.list.d/docker.list
      args:
        creates: /etc/apt/sources.list.d/docker.list

    - name: Update package index for Docker
      apt:
        update_cache: yes

    - name: Install Docker and dependencies
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Install K3s
      shell:
        cmd: "curl -sfL https://get.k3s.io | sh -"
        creates: /usr/local/bin/k3s

    - name: Verify K3s installation
      command: "/usr/local/bin/k3s --version"

    - name: Create symlink for kubectl
      file:
        src: /usr/local/bin/k3s
        dest: /usr/local/bin/kubectl
        state: link

    - name: Verify kubectl version
      command: "/usr/local/bin/kubectl version --client"

    - name: Check K3s service status
      command: "systemctl status k3s --no-pager"
      register: k3s_status

    - name: Install Helm
      shell:
        cmd: "curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash"
        creates: /usr/local/bin/helm

    - name: Verify Helm installation
      command: "/usr/local/bin/helm version"

    - name: Configure kubeconfig
      shell:
        cmd: |
          mkdir -p ~/.kube && \
          cp /etc/rancher/k3s/k3s.yaml {{ kubeconfig_path }} && \
          chown $(whoami):$(whoami) {{ kubeconfig_path }}
        creates: "{{ kubeconfig_path }}"

    - name: Set KUBECONFIG environment variable
      lineinfile:
        path: ~/.bashrc
        line: "export KUBECONFIG={{ kubeconfig_path }}"
        create: yes

    - name: Source the kubeconfig
      shell:
        cmd: "source ~/.bashrc"

    - name: Clone Airflow Git repository
      git:
        repo: "{{ airflow_git_repo }}"
        dest: /tmp/k8s-airflow
        version: HEAD

    - name: Add Helm Airflow repository
      shell:
        cmd: "helm repo add apache-airflow https://airflow.apache.org && helm repo update"

    - name: Create Airflow namespace
      command: "kubectl create namespace airflow"
      register: airflow_namespace
      failed_when: "'AlreadyExists' not in airflow_namespace.stderr"

    - name: Apply PVC configurations
      shell:
        cmd: |
          kubectl apply -f /tmp/k8s-airflow/airflow-shared-data-pvc.yaml -n airflow && \
          kubectl apply -f /tmp/k8s-airflow/airflow-trigger-pvc.yaml -n airflow

    - name: Create SSH secret for Git
      shell:
        cmd: |
          kubectl create secret generic git-ssh-key \
            --from-file=ssh-privatekey=/home/$(whoami)/.ssh/id_ed25519 -n airflow
        creates: /tmp/k8s-airflow/ssh-secret-created

    - name: Install Airflow using Helm
      shell:
        cmd: |
          helm install airflow apache-airflow/airflow \
            --namespace airflow \
            -f /tmp/k8s-airflow/airflow-values.yaml --debug

    - name: Verify Airflow pods
      command: "kubectl get pods --namespace airflow"

    - name: Verify Airflow resources
      command: "kubectl get all --namespace airflow"

    - name: Clean up temporary files
      file:
        path: /tmp/k8s-airflow
        state: absent
