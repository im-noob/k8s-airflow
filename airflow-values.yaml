executor: CeleryExecutor

images:
  airflow:
    repository: aaravonly4you/custom-airflow
    tag: latest
    pullPolicy: Always
        
    # config:
      # AIRFLOW__CORE__FERNET_KEY: 'qNsbDaiqY1ECxKYXGiTIJhIkUv7lR7yTN-wNtMZDY_0='
      # AIRFLOW__CORE__EXECUTOR: CeleryExecutor
      # AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
      # AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      # AIRFLOW__WEBSERVER__WEB_SERVER_HOST: '0.0.0.0'
      # AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080 # Ensure the webserver port is set explicitly.
    # dags:
    #   path: /opt/airflow/dags
    # logs:
    #   path: /opt/airflow/logs

    # configMap: "airflow-requirements"

# extraEnv: |
#   - name: AIRFLOW__WEBSERVER__WEB_SERVER_PORT
#     value: 8084    
# extraEnv: |
#   - name: AIRFLOW__CORE__LOAD_EXAMPLES
#      value: False
#   - name: AIRFLOW__WEBSERVER__WEB_SERVER_PORT
#      value: 8084

webserverSecretKey: 'a054c14ac4ad790be409d99cd808c2ae'

postgresql:
  enabled: true
  persistence:
    enabled: true # Enable persistence to retain data across pod restarts.
    size: 10Gi # Adjust storage size as required.

redis:
  enabled: true
  persistence:
    enabled: true # Enable persistence for Redis.
    size: 2Gi # Adjust storage size as required.

# triggerer:
#   extraVolumes:
#     - name: triggerer-data
#       persistentVolumeClaim:
#         claimName: triggerer-data-pvc
#     - name: airflow-storage
#       persistentVolumeClaim:
#         claimName: shared-data-pvc

#   extraVolumeMounts:
#     - name: triggerer-data
#       mountPath: /opt/airflow/data-old
#     - name: airflow-storage
#       mountPath: /opt/airflow/data-new

#   persistence:
#     enabled: false

webserver:
  service:
    type: LoadBalancer

  livenessProbe:
    initialDelaySeconds: 15
    timeoutSeconds: 5
    failureThreshold: 5
    periodSeconds: 10
    scheme: HTTP

  readinessProbe:
    initialDelaySeconds: 15
    timeoutSeconds: 5
    failureThreshold: 5
    periodSeconds: 10
    scheme: HTTP

  # Wait for at most 1 minute (6*10s) for the webserver container to startup.
  # livenessProbe kicks in after the first successful startupProbe
  startupProbe:
    timeoutSeconds: 20
    failureThreshold: 6
    periodSeconds: 20
    scheme: HTTP

  extraVolumes:
    - name: triggerer-data
      persistentVolumeClaim:
        claimName: triggerer-data-pvc
    - name: airflow-storage
      persistentVolumeClaim:
        claimName: shared-data-pvc

  extraVolumeMounts:
    - name: triggerer-data
      mountPath: /opt/airflow/data-old
    - name: airflow-storage
      mountPath: /opt/airflow/data-new


# dags:
#   # mountPath: /opt/airflow/dags/repo/dags
#   gitSync:
#     enabled: true
    
#     repo: git@bitbucket.org:amriteshonly4u/k8s-airflow.git
#     branch: master
#     rev: HEAD
#     depth: 1
#     maxFailures: 3
#     subPath: ""
#     # subPath: "repo/dags"
#     period: 15s
#     sshKeySecret: airflow-ssh-secret
    

workers:
  extraVolumes:
    - name: triggerer-data
      persistentVolumeClaim:
        claimName: triggerer-data-pvc
    - name: airflow-storage
      persistentVolumeClaim:
        claimName: shared-data-pvc

  extraVolumeMounts:
    - name: triggerer-data
      mountPath: /opt/airflow/data-old
    - name: airflow-storage
      mountPath: /opt/airflow/data-new
    
  # persistence:
  #   enabled: false

scheduler:
  extraInitContainers:
    - name: git-sync
      image: k8s.gcr.io/git-sync/git-sync:v4.3.0
      env:
        - name: GITSYNC_REPO
          value: git@bitbucket.org:amriteshonly4u/k8s-airflow.git
        - name: GITSYNC_BRANCH
          value: master
        - name: GITSYNC_ROOT
          value: "/opt/airflow/data-new"
        - name: GITSYNC_SSH_KEY_FILE
          value: "/etc/git-secret/ssh-privatekey"
        - name: GITSYNC_REV
          value: HEAD
        - name: GITSYNC_DEPTH
          value: "1"
        - name: GITSYNC_WAIT
          value: "30"  # Poll every 15 seconds
        - name: GITSYNC_MAX_SYNC_FAILURES
          value: "3000"
        - name: GITSYNC_SSH
          value: "true"
        - name: GITSYNC_ADD_USER
          value: "true"  # Ensures synced files are writable
        - name: GITSYNC_ONE_TIME
          value: "true"
        - name: GITSYNC_SSH_KNOWN_HOSTS
          value: "false"  # Disable known_hosts checking if not needed
      volumeMounts:
        - name: airflow-storage
          mountPath: /opt/airflow/data-new  # Sync destination folder # Match this to the GITSYNC_ROOT
        - name: ssh-key-volume
          mountPath: /etc/git-secret
          readOnly: true

  extraVolumes:
    - name: triggerer-data
      persistentVolumeClaim:
        claimName: triggerer-data-pvc
    - name: airflow-storage
      persistentVolumeClaim:
        claimName: shared-data-pvc
    - name: ssh-key-volume
      secret:
        secretName: git-ssh-key  # Ensure this secret exists and contains your Git SSH key


  extraVolumeMounts:
    - name: triggerer-data
      mountPath: /opt/airflow/data-old
    - name: airflow-storage
      mountPath: /opt/airflow/data-new
    - name: ssh-key-volume
      mountPath: /etc/git-secret  # SSH key for Git Sync
      readOnly: true



extraEnv: |
  - name: AIRFLOW__WEBSERVER__INSTANCE_NAME
    value: 'K8S'