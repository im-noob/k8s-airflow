executor: CeleryExecutor
airflow:
  image:
    repository: apache/airflow
    tag: latest-python3.12
    pullPolicy: Always

  config:
    AIRFLOW__CORE__FERNET_KEY: 'qNsbDaiqY1ECxKYXGiTIJhIkUv7lR7yTN-wNtMZDY_0='
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__WEBSERVER__WEB_SERVER_HOST: '0.0.0.0'
    AIRFLOW__WEBSERVER__WEB_SERVER_PORT: 8080 # Ensure the webserver port is set explicitly.
  dags:
    path: /opt/airflow/dags
  logs:
    path: /opt/airflow/logs

  configMap: "airflow-requirements"

webserverSecretKey: 'a054c14ac4ad790be409d99cd808c2ae'

postgresql:
  enabled: true
  persistence:
    enabled: true # Enable persistence to retain data across pod restarts.
    size: 10Gi # Adjust storage size as required.

redis:
  enabled: true
  persistence:
    enabled: true # Enable persistence for Redis.
    size: 2Gi # Adjust storage size as required.

triggerer:
  extraVolumes:
    - name: triggerer-data
      persistentVolumeClaim:
        claimName: triggerer-data-pvc

  extraVolumeMounts:
    - name: triggerer-data
      mountPath: /opt/airflow/data

  persistence:
    enabled: false

webserver:
  service:
    type: LoadBalancer
